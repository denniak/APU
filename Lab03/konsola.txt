> install.packages("neuralnet")
Instalowanie pakietu w ‘E:/Users/denn/Documents/R/win-library/4.1’
(ponieważ ‘lib’ nie jest określony)
instalowanie dodatkowych zależności ‘Deriv’

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/Deriv_4.1.3.zip'
Content type 'application/zip' length 148883 bytes (145 KB)
downloaded 145 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/neuralnet_1.44.2.zip'
Content type 'application/zip' length 123969 bytes (121 KB)
downloaded 121 KB

package ‘Deriv’ successfully unpacked and MD5 sums checked
package ‘neuralnet’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	E:\Users\denn\AppData\Local\Temp\RtmpcvYV4j\downloaded_packages
> library(neuralnet)
Warning message:
pakiet ‘neuralnet’ został zbudowany w wersji R 4.1.3 
traininginput <- as.data.frame(runif(100, min = 1, max = 100))
> trainingoutput <- traininginput^3 - (2 * traininginput)
> # Definicja funkcji normalizującej
> normalize <- function(x) {
+   return ((x - min(x)) / (max(x) - min(x)))
+ }
> # Łączenie danych treningowych w jedną ramkę danych
> data <- cbind(traininginput, trainingoutput)
> # Instalacja i załadowanie pakietu neuralnet
> install.packages("neuralnet")
Error in install.packages : Updating loaded packages
> colnames(data) <- c("input", "output")
> # Normalizacja danych
> normalized <- as.data.frame(lapply(data, normalize))
> # Podział na zbiór treningowy i testowy
> traindata <- normalized[1:80, ]
> testdata <- normalized[81:100, ]
> # Tworzenie sieci neuronowej
> net.sqrt <- neuralnet(output ~ input, traindata, hidden = 10, threshold = 0.01, 
+                       linear.output = TRUE)
> # Wyświetlanie informacji o sieci neuronowej
> print(net.sqrt)
$call
neuralnet(formula = output ~ input, data = traindata, hidden = 10, 
    threshold = 0.01, linear.output = TRUE)

$response
         output
1  1.001187e-01
2  3.452718e-03
3  5.389945e-05
4  6.103434e-01
5  8.276906e-02
6  3.625751e-03
7  2.189638e-01
8  9.371972e-03
9  2.602741e-04
10 1.539578e-03
11 1.099399e-02
12 3.472166e-01
13 9.874517e-03
14 6.699998e-03
15 2.734479e-01
16 2.597592e-01
17 4.071434e-01
18 4.214859e-01
19 1.015841e-01
20 2.089134e-03
21 3.985166e-01
22 2.959738e-01
23 7.320994e-02
24 1.610903e-01
25 5.932927e-03
26 1.722057e-01
27 3.066254e-01
28 6.069880e-01
29 1.099268e-01
30 4.859955e-06
31 8.805600e-02
32 1.433275e-03
33 5.863548e-01
34 7.460632e-01
35 2.338363e-01
36 9.964073e-02
37 9.771473e-01
38 4.960832e-04
39 1.239212e-02
40 7.309339e-01
41 0.000000e+00
42 3.137396e-02
43 8.646609e-01
44 2.020676e-01
45 1.000000e+00
46 2.242138e-03
47 7.727386e-01
48 1.156590e-01
49 7.396367e-04
50 5.718147e-01
51 3.302484e-03
52 1.063456e-02
53 4.489513e-02
54 2.488619e-01
55 1.409553e-01
56 5.582407e-01
57 2.506280e-02
58 3.685841e-03
59 2.622378e-01
60 2.773182e-01
61 2.947592e-02
62 2.816611e-03
63 2.686652e-07
64 5.397761e-02
65 2.146668e-01
66 3.505019e-04
67 3.879156e-02
68 7.810278e-04
69 2.259820e-01
70 6.196637e-02
71 5.621635e-01
72 1.184590e-01
73 1.141531e-01
74 1.706177e-01
75 7.701707e-03
76 3.091990e-01
77 2.272375e-01
78 7.055895e-05
79 1.599948e-01
80 1.404852e-01

$covariate
                  
 [1,] 0.4576203283
 [2,] 0.1407447409
 [3,] 0.0271862529
 [4,] 0.8463372473
 [5,] 0.4287271887
 [6,] 0.1432529624
 [7,] 0.5977329354
 [8,] 0.2010700788
 [9,] 0.0529279829
[10,] 0.1047539222
[11,] 0.2127218592
[12,] 0.6991129893
[13,] 0.2048146451
[14,] 0.1785093528
[15,] 0.6446513896
[16,] 0.6334965967
[17,] 0.7379041106
[18,] 0.7466150753
[19,] 0.4599026706
[20,] 0.1172228681
[21,] 0.7325656737
[22,] 0.6622236711
[23,] 0.4110439958
[24,] 0.5383829388
[25,] 0.1709410587
[26,] 0.5507730546
[27,] 0.6702232175
[28,] 0.8447603587
[29,] 0.4724955992
[30,] 0.0078640809
[31,] 0.4379276113
[32,] 0.1020118912
[33,] 0.8349334253
[34,] 0.9057936405
[35,] 0.6112484681
[36,] 0.4568710011
[37,] 0.9922267237
[38,] 0.0682440785
[39,] 0.2218772927
[40,] 0.8995430885
[41,] 0.0000000000
[42,] 0.3068521084
[43,] 0.9520860595
[44,] 0.5816139825
[45,] 1.0000000000
[46,] 0.1202971201
[47,] 0.9166115552
[48,] 0.4807829871
[49,] 0.0795588521
[50,] 0.8278691580
[51,] 0.1384983229
[52,] 0.2102440557
[53,] 0.3473525580
[54,] 0.6243331029
[55,] 0.5144017881
[56,] 0.8211653405
[57,] 0.2838301975
[58,] 0.1441053480
[59,] 0.6355450100
[60,] 0.6477374420
[61,] 0.3002812327
[62,] 0.1307312082
[63,] 0.0008895577
[64,] 0.3701382135
[65,] 0.5937144963
[66,] 0.0595778571
[67,] 0.3302506660
[68,] 0.0812234121
[69,] 0.6041845859
[70,] 0.3881495620
[71,] 0.8231137880
[72,] 0.4847318219
[73,] 0.4786327656
[74,] 0.5490362585
[75,] 0.1875693162
[76,] 0.6721281820
[77,] 0.6053246415
[78,] 0.0306433970
[79,] 0.5371312995
[80,] 0.5138153715

$model.list
$model.list$response
[1] "output"

$model.list$variables
[1] "input"


$err.fct
function (x, y) 
{
    1/2 * (y - x)^2
}
<bytecode: 0x000001dbfed4bbf8>
<environment: 0x000001db86b19168>
attr(,"type")
[1] "sse"

$act.fct
function (x) 
{
    1/(1 + exp(-x))
}
<bytecode: 0x000001dbfed4b0c0>
<environment: 0x000001db86b19600>
attr(,"type")
[1] "logistic"

$linear.output
[1] TRUE

$data
          input       output
1  0.4576203283 1.001187e-01
2  0.1407447409 3.452718e-03
3  0.0271862529 5.389945e-05
4  0.8463372473 6.103434e-01
5  0.4287271887 8.276906e-02
6  0.1432529624 3.625751e-03
7  0.5977329354 2.189638e-01
8  0.2010700788 9.371972e-03
9  0.0529279829 2.602741e-04
10 0.1047539222 1.539578e-03
11 0.2127218592 1.099399e-02
12 0.6991129893 3.472166e-01
13 0.2048146451 9.874517e-03
14 0.1785093528 6.699998e-03
15 0.6446513896 2.734479e-01
16 0.6334965967 2.597592e-01
17 0.7379041106 4.071434e-01
18 0.7466150753 4.214859e-01
19 0.4599026706 1.015841e-01
20 0.1172228681 2.089134e-03
21 0.7325656737 3.985166e-01
22 0.6622236711 2.959738e-01
23 0.4110439958 7.320994e-02
24 0.5383829388 1.610903e-01
25 0.1709410587 5.932927e-03
26 0.5507730546 1.722057e-01
27 0.6702232175 3.066254e-01
28 0.8447603587 6.069880e-01
29 0.4724955992 1.099268e-01
30 0.0078640809 4.859955e-06
31 0.4379276113 8.805600e-02
32 0.1020118912 1.433275e-03
33 0.8349334253 5.863548e-01
34 0.9057936405 7.460632e-01
35 0.6112484681 2.338363e-01
36 0.4568710011 9.964073e-02
37 0.9922267237 9.771473e-01
38 0.0682440785 4.960832e-04
39 0.2218772927 1.239212e-02
40 0.8995430885 7.309339e-01
41 0.0000000000 0.000000e+00
42 0.3068521084 3.137396e-02
43 0.9520860595 8.646609e-01
44 0.5816139825 2.020676e-01
45 1.0000000000 1.000000e+00
46 0.1202971201 2.242138e-03
47 0.9166115552 7.727386e-01
48 0.4807829871 1.156590e-01
49 0.0795588521 7.396367e-04
50 0.8278691580 5.718147e-01
51 0.1384983229 3.302484e-03
52 0.2102440557 1.063456e-02
53 0.3473525580 4.489513e-02
54 0.6243331029 2.488619e-01
55 0.5144017881 1.409553e-01
56 0.8211653405 5.582407e-01
57 0.2838301975 2.506280e-02
58 0.1441053480 3.685841e-03
59 0.6355450100 2.622378e-01
60 0.6477374420 2.773182e-01
61 0.3002812327 2.947592e-02
62 0.1307312082 2.816611e-03
63 0.0008895577 2.686652e-07
64 0.3701382135 5.397761e-02
65 0.5937144963 2.146668e-01
66 0.0595778571 3.505019e-04
67 0.3302506660 3.879156e-02
68 0.0812234121 7.810278e-04
69 0.6041845859 2.259820e-01
70 0.3881495620 6.196637e-02
71 0.8231137880 5.621635e-01
72 0.4847318219 1.184590e-01
73 0.4786327656 1.141531e-01
74 0.5490362585 1.706177e-01
75 0.1875693162 7.701707e-03
76 0.6721281820 3.091990e-01
77 0.6053246415 2.272375e-01
78 0.0306433970 7.055895e-05
79 0.5371312995 1.599948e-01
80 0.5138153715 1.404852e-01

$exclude
NULL

$net.result
$net.result[[1]]
             [,1]
 [1,] 0.089326483
 [2,] 0.004313754
 [3,] 0.009220278
 [4,] 0.622321300
 [5,] 0.069775849
 [6,] 0.004228557
 [7,] 0.225473706
 [8,] 0.003860273
 [9,] 0.008343907
[10,] 0.005872430
[11,] 0.004286633
[12,] 0.365356791
[13,] 0.003974945
[14,] 0.003572691
[15,] 0.286099827
[16,] 0.271029144
[17,] 0.427308042
[18,] 0.441818952
[19,] 0.090994057
[20,] 0.005278034
[21,] 0.418521864
[22,] 0.310654157
[23,] 0.059219875
[24,] 0.159444515
[25,] 0.003614014
[26,] 0.172224406
[27,] 0.322157279
[28,] 0.619275415
[29,] 0.100521861
[30,] 0.009575685
[31,] 0.075689046
[32,] 0.006007384
[33,] 0.600423769
[34,] 0.741122446
[35,] 0.242189344
[36,] 0.088782949
[37,] 0.925657632
[38,] 0.007668700
[39,] 0.004772471
[40,] 0.728288580
[41,] 0.009628406
[42,] 0.017343694
[43,] 0.838424615
[44,] 0.206344661
[45,] 0.942817787
[46,] 0.005138217
[47,] 0.763512192
[48,] 0.107094910
[49,] 0.007125216
[50,] 0.587012248
[51,] 0.004393446
[52,] 0.004178540
[53,] 0.029697806
[54,] 0.258952788
[55,] 0.136233590
[56,] 0.574395593
[57,] 0.012304933
[58,] 0.004200549
[59,] 0.273766312
[60,] 0.290340416
[61,] 0.015766708
[62,] 0.004691486
[63,] 0.009625347
[64,] 0.038776563
[65,] 0.220622390
[66,] 0.008061476
[67,] 0.023910976
[68,] 0.007043239
[69,] 0.233376448
[70,] 0.047106494
[71,] 0.578051393
[72,] 0.110311636
[73,] 0.105366350
[74,] 0.170400760
[75,] 0.003609726
[76,] 0.324926228
[77,] 0.234787471
[78,] 0.009126482
[79,] 0.158183274
[80,] 0.135691275


$weights
$weights[[1]]
$weights[[1]][[1]]
           [,1]      [,2]      [,3]       [,4]      [,5]       [,6]       [,7]       [,8]       [,9]     [,10]
[1,] -0.9851733 -2.695582  3.517517 -0.1600902 0.7729917  0.6967374 -1.9313644  0.1056050 -0.5300161 0.2144976
[2,] -0.3660417  2.193417 -3.062031  0.9007733 0.4468555 -4.3966095 -0.1914534 -0.8332012 -0.2639495 0.8171724

$weights[[1]][[2]]
            [,1]
 [1,] -0.6934889
 [2,] -0.5502751
 [3,]  1.5105361
 [4,] -1.2226543
 [5,]  0.7890703
 [6,]  1.1034314
 [7,]  1.1219729
 [8,] -1.8304270
 [9,] -1.0436973
[10,]  0.5139851
[11,]  1.2078738



$generalized.weights
$generalized.weights[[1]]
            [,1]
 [1,]  8.9329023
 [2,] -8.0963672
 [3,] -2.8362756
 [4,]  8.2258762
 [5,]  9.6594007
 [6,] -7.8716035
 [7,]  6.9519213
 [8,]  7.2535152
 [9,] -4.9605882
[10,] -8.3952297
[11,] 10.6803949
[12,]  6.6395857
[13,]  8.4324762
[14,] -0.3561729
[15,]  6.7033433
[16,]  6.7463595
[17,]  6.7566682
[18,]  6.8046150
[19,]  8.8813974
[20,] -8.7608343
[21,]  6.7314764
[22,]  6.6558840
[23,] 10.1792256
[24,]  7.5350117
[25,] -2.6446992
[26,]  7.3863705
[27,]  6.6426026
[28,]  8.1848363
[29,]  8.6113806
[30,] -1.0868968
[31,]  9.4124025
[32,] -8.2740882
[33,]  7.9481183
[34,] 10.7335247
[35,]  6.8620052
[36,]  8.9499894
[37,] 32.0038784
[38,] -6.1350028
[39,] 12.7847289
[40,] 10.3449336
[41,] -0.3159752
[42,] 14.5914314
[43,] 15.8128875
[44,]  7.0791383
[45,] 41.0430548
[46,] -8.7920628
[47,] 11.5192220
[48,]  8.4461781
[49,] -6.9446366
[50,]  7.7964456
[51,] -8.2676186
[52,] 10.0156154
[53,] 12.6202483
[54,]  6.7891605
[55,]  7.8677062
[56,]  7.6652867
[57,] 15.6276555
[58,] -7.7868269
[59,]  6.7377128
[60,]  6.6932052
[61,] 14.9103687
[62,] -8.6619338
[63,] -0.4053646
[64,] 11.6382971
[65,]  6.9815774
[66,] -5.4795003
[67,] 13.4305621
[68,] -7.0580207
[69,]  6.9071216
[70,] 10.9489438
[71,]  7.7021939
[72,]  8.3707833
[73,]  8.4881230
[74,]  7.4062993
[75,]  2.6765352
[76,]  6.6402185
[77,]  6.8995631
[78,] -3.1330308
[79,]  7.5508785
[80,]  7.8766285


$startweights
$startweights[[1]]
$startweights[[1]][[1]]
           [,1]       [,2]      [,3]       [,4]       [,5]        [,6]       [,7]       [,8]       [,9]      [,10]
[1,] -0.8907286 -2.7900322  1.422103 -0.2465581  0.6785636 -0.03697183 -1.8363560  0.1869255 -0.6244109  0.1200608
[2,]  0.3233245 -0.1865547 -1.545595  1.3749532 -0.4115778 -1.17954403  0.3409347 -2.3356532 -0.3808955 -0.1080451

$startweights[[1]][[2]]
            [,1]
 [1,] -0.7879390
 [2,] -0.6452616
 [3,]  1.4160859
 [4,] -1.0915690
 [5,]  0.6987901
 [6,]  1.0089812
 [7,]  0.1835369
 [8,] -1.9254348
 [9,] -1.0752879
[10,]  0.4195403
[11,]  1.1134183



$result.matrix
                                [,1]
error                    0.007431464
reached.threshold        0.009115887
steps                  573.000000000
Intercept.to.1layhid1   -0.985173276
input.to.1layhid1       -0.366041698
Intercept.to.1layhid2   -2.695582053
input.to.1layhid2        2.193416550
Intercept.to.1layhid3    3.517516830
input.to.1layhid3       -3.062030792
Intercept.to.1layhid4   -0.160090231
input.to.1layhid4        0.900773266
Intercept.to.1layhid5    0.772991678
input.to.1layhid5        0.446855506
Intercept.to.1layhid6    0.696737364
input.to.1layhid6       -4.396609474
Intercept.to.1layhid7   -1.931364404
input.to.1layhid7       -0.191453383
Intercept.to.1layhid8    0.105604989
input.to.1layhid8       -0.833201247
Intercept.to.1layhid9   -0.530016098
input.to.1layhid9       -0.263949534
Intercept.to.1layhid10   0.214497627
input.to.1layhid10       0.817172437
Intercept.to.output     -0.693488860
1layhid1.to.output      -0.550275068
1layhid2.to.output       1.510536053
1layhid3.to.output      -1.222654251
1layhid4.to.output       0.789070274
1layhid5.to.output       1.103431372
1layhid6.to.output       1.121972853
1layhid7.to.output      -1.830426950
1layhid8.to.output      -1.043697276
1layhid9.to.output       0.513985067
1layhid10.to.output      1.207873772

attr(,"class")
[1] "nn"
> # Wykres sieci neuronowej
> plot(net.sqrt, rep = "best")
> # Obliczanie wyników dla zbioru testowego
> net.results <- compute(net.sqrt, testdata)
> # Wyświetlanie wyników sieci neuronowej
> print(net.results$net.result)
             [,1]
 [1,] 0.007792112
 [2,] 0.003905603
 [3,] 0.175987970
 [4,] 0.201356837
 [5,] 0.046678487
 [6,] 0.008218673
 [7,] 0.181061757
 [8,] 0.268260556
 [9,] 0.168318808
[10,] 0.062866934
[11,] 0.356533935
[12,] 0.274201274
[13,] 0.008129644
[14,] 0.006319197
[15,] 0.029940475
[16,] 0.714728540
[17,] 0.182269228
[18,] 0.386873139
[19,] 0.773769350
[20,] 0.003828030
> # Porównanie wyników rzeczywistych z przewidywanymi
> comparison <- data.frame(actual = testdata[, 2], prediction = net.results$net.result)
> comparison
         actual  prediction
1  0.0184211922 0.007792112
2  0.0095794538 0.003905603
3  0.1754850738 0.175987970
4  0.1976818991 0.201356837
5  0.0615619261 0.046678487
6  0.0002988336 0.008218673
7  0.1799111530 0.181061757
8  0.2572553496 0.268260556
9  0.1688056010 0.168318808
10 0.0765329738 0.062866934
11 0.3388489690 0.356533935
12 0.2626320315 0.274201274
13 0.0003276453 0.008129644
14 0.0012087079 0.006319197
15 0.0451447457 0.029940475
16 0.7150743512 0.714728540
17 0.1809653774 0.182269228
18 0.3677946415 0.386873139
19 0.7850796898 0.773769350
20 0.0047281247 0.003828030

> data <- read.csv("E:/Users/denn/Desktop/iPady.csv") 
> data
                      model wyswietlacz ram pamiec aparat cena     kolor system.operacyjny           matryca procesor
1                 iPad 2021        10.2   8     64     12 1749     szary          iPadOS15     Liquid Retina        8
2           iPad 10gen 2022        10.9   8     64     12 2749     szary          iPadOS16     Liquid Retina        6
3             iPad Air 2020        10.9   8    256      8 4899   srebrny          iPadOS14            Retina        6
4             iPad Air 2022        10.9   8     64     12 3359     szary          iPadOS15 Liquid Retina XDR        8
5             iPad Pro 2021        11.0  16    256     12 7699   srebrny          iPadOS14     Liquid Retina        8
6        iPad Pro 2022 - 11        11.0   8    128     12 5199     szary          iPadOS16     Liquid Retina        8
7      iPad Pro 2022 - 12.9        12.9   8   1024     12 6599     szary          iPadOS16 Liquid Retina XDR        8
8  iPad Pro 2022 - 11 - 2TB        11.0   8   2048     12 8599     szary          iPadOS16     Liquid Retina        8
9            iPad mini 2021         8.3   4     64      6 2899 fioletowy          iPadOS15            Retina        6
10           iPad mini 2019         7.9   3     64      6 2719     szary          iPadOS12            Retina        6
> normalize <- function(x) {
+   return ((x-min(x)) / (max(x) - min(x)))
+ }
> iPady_simpified <- data[, c('ram', 'pamiec', 'aparat','cena','procesor')]
> iPady_normalized <- as.data.frame(lapply(iPady_simpified, normalize))
> traindata <- iPady_normalized
> testdata <- iPady_normalized[1:3, ]
> iPady <- neuralnet(cena ~ ram + pamiec + aparat + procesor, data=traindata,
+                           hidden=c(3,2), threshold=0.01)
> print(iPady)
$call
neuralnet(formula = cena ~ ram + pamiec + aparat + procesor, 
    data = traindata, hidden = c(3, 2), threshold = 0.01)

$response
        cena
1  0.0000000
2  0.1459854
3  0.4598540
4  0.2350365
5  0.8686131
6  0.5036496
7  0.7080292
8  1.0000000
9  0.1678832
10 0.1416058

$covariate
             ram     pamiec    aparat procesor
 [1,] 0.38461538 0.00000000 1.0000000        1
 [2,] 0.38461538 0.00000000 1.0000000        0
 [3,] 0.38461538 0.09677419 0.3333333        0
 [4,] 0.38461538 0.00000000 1.0000000        1
 [5,] 1.00000000 0.09677419 1.0000000        1
 [6,] 0.38461538 0.03225806 1.0000000        1
 [7,] 0.38461538 0.48387097 1.0000000        1
 [8,] 0.38461538 1.00000000 1.0000000        1
 [9,] 0.07692308 0.00000000 0.0000000        0
[10,] 0.00000000 0.00000000 0.0000000        0

$model.list
$model.list$response
[1] "cena"

$model.list$variables
[1] "ram"      "pamiec"   "aparat"   "procesor"


$err.fct
function (x, y) 
{
    1/2 * (y - x)^2
}
<bytecode: 0x000001dbfed4bbf8>
<environment: 0x000001db867f0148>
attr(,"type")
[1] "sse"

$act.fct
function (x) 
{
    1/(1 + exp(-x))
}
<bytecode: 0x000001dbfed4b0c0>
<environment: 0x000001db867f05e0>
attr(,"type")
[1] "logistic"

$linear.output
[1] TRUE

$data
          ram     pamiec    aparat      cena procesor
1  0.38461538 0.00000000 1.0000000 0.0000000        1
2  0.38461538 0.00000000 1.0000000 0.1459854        0
3  0.38461538 0.09677419 0.3333333 0.4598540        0
4  0.38461538 0.00000000 1.0000000 0.2350365        1
5  1.00000000 0.09677419 1.0000000 0.8686131        1
6  0.38461538 0.03225806 1.0000000 0.5036496        1
7  0.38461538 0.48387097 1.0000000 0.7080292        1
8  0.38461538 1.00000000 1.0000000 1.0000000        1
9  0.07692308 0.00000000 0.0000000 0.1678832        0
10 0.00000000 0.00000000 0.0000000 0.1416058        0

$exclude
NULL

$net.result
$net.result[[1]]
           [,1]
 [1,] 0.2320804
 [2,] 0.1705193
 [3,] 0.4755045
 [4,] 0.2320804
 [5,] 0.8455939
 [6,] 0.2723189
 [7,] 0.7315515
 [8,] 1.0003706
 [9,] 0.1617237
[10,] 0.1074902


$weights
$weights[[1]]
$weights[[1]][[1]]
             [,1]       [,2]       [,3]
[1,] -0.337519616 -1.2045365  0.1975564
[2,] -2.591368916  2.2593181 -0.6443226
[3,] -2.632507218  1.4575608 -5.3487779
[4,]  1.864792244 -0.0340977 -1.0575687
[5,] -0.004248963  0.4294676 -0.1786694

$weights[[1]][[2]]
           [,1]       [,2]
[1,]  0.9266903 -0.1601382
[2,] -1.7261211 -1.5528417
[3,]  0.3696082  1.0293862
[4,] -0.6978538 -1.5711287

$weights[[1]][[3]]
           [,1]
[1,] -0.6199868
[2,]  0.9139380
[3,]  1.5101385



$generalized.weights
$generalized.weights[[1]]
             [,1]        [,2]        [,3]        [,4]
 [1,]    4.585976    7.037145  -1.4919634   0.3522229
 [2,]    5.495956    8.771107  -1.7315107   0.4218970
 [3,]    3.256327    5.625753  -0.7805442   0.2923170
 [4,]    4.585976    7.037145  -1.4919634   0.3522229
 [5,]    4.453435    6.445250  -1.6663522   0.3048518
 [6,]    4.243127    6.254340  -1.4642785   0.3160144
 [7,]    3.932006    3.915806  -1.8975740   0.2385461
 [8,] -964.281205 -847.811444 418.4601833 -74.7099726
 [9,]    5.279003    9.748271  -1.4582865   0.4003195
[10,]    7.220260   13.229448  -2.1614896   0.5108627


$startweights
$startweights[[1]]
$startweights[[1]][[1]]
           [,1]        [,2]       [,3]
[1,] -0.5719731 -1.18288837  0.5761732
[2,] -1.1859819 -0.26710786  0.1333867
[3,] -0.3853552  1.44079996 -0.1435779
[4,]  0.7174094 -0.05799887 -1.1137584
[5,] -0.1735359  0.39280329  0.1479645

$startweights[[1]][[2]]
           [,1]       [,2]
[1,]  0.4400541 -0.5091876
[2,] -0.4901250 -0.6614019
[3,] -0.8449230  0.0148550
[4,] -0.8087808 -1.4589976

$startweights[[1]][[3]]
           [,1]
[1,] -1.6445568
[2,] -0.1481321
[3,] -0.2359928



$result.matrix
                              [,1]
error                  0.055257961
reached.threshold      0.004648047
steps                 65.000000000
Intercept.to.1layhid1 -0.337519616
ram.to.1layhid1       -2.591368916
pamiec.to.1layhid1    -2.632507218
aparat.to.1layhid1     1.864792244
procesor.to.1layhid1  -0.004248963
Intercept.to.1layhid2 -1.204536540
ram.to.1layhid2        2.259318059
pamiec.to.1layhid2     1.457560799
aparat.to.1layhid2    -0.034097700
procesor.to.1layhid2   0.429467580
Intercept.to.1layhid3  0.197556389
ram.to.1layhid3       -0.644322616
pamiec.to.1layhid3    -5.348777863
aparat.to.1layhid3    -1.057568685
procesor.to.1layhid3  -0.178669441
Intercept.to.2layhid1  0.926690344
1layhid1.to.2layhid1  -1.726121146
1layhid2.to.2layhid1   0.369608178
1layhid3.to.2layhid1  -0.697853781
Intercept.to.2layhid2 -0.160138241
1layhid1.to.2layhid2  -1.552841714
1layhid2.to.2layhid2   1.029386221
1layhid3.to.2layhid2  -1.571128717
Intercept.to.cena     -0.619986771
2layhid1.to.cena       0.913938010
2layhid2.to.cena       1.510138468

attr(,"class")
[1] "nn"
> plot(iPady)
> iPady.results <- compute(iPady, testdata)
> print(iPady.results$net.result)
       [,1]
1 0.2320804
2 0.1705193
3 0.4755045
> comparison <- data.frame(actual =testdata[,c('cena')], prediction = iPady.results$net.result)
> comparison
     actual prediction
1 0.0000000  0.2320804
2 0.1459854  0.1705193
3 0.4598540  0.4755045
